angular.module("ngDragDrop",[]).directive("uiDraggable",["$parse","$rootScope",function(n,t){return function(i,r,u){window.jQuery&&!window.jQuery.event.props.dataTransfer&&window.jQuery.event.props.push("dataTransfer");r.attr("draggable",!1);u.$observe("uiDraggable",function(n){r.attr("draggable",n)});var f="";i.$watch(u.drag,function(n){f=n});r.bind("dragstart",function(n){var i=angular.toJson(f),r=u.dragChannel||"defaultchannel";n.dataTransfer.setData("drag/text",i);t.$broadcast("ANGULAR_DRAG_START",r)});r.bind("dragend",function(r){var e=u.dragChannel||"defaultchannel",f;t.$broadcast("ANGULAR_DRAG_END",e);r.dataTransfer.dropEffect!=="none"&&u.onDropSuccess&&(f=n(u.onDropSuccess),i.$apply(function(){f(i,{$event:r})}))})}}]).directive("uiOnDrop",["$parse","$rootScope",function(n,t){return function(i,r,u){function s(){e===f&&r.addClass(o)}function h(){e===f&&r.removeClass(o)}function c(n){return n.preventDefault&&n.preventDefault(),n.stopPropagation&&n.stopPropagation(),n.dataTransfer.dropEffect="move",!1}function l(t){var f,e;t.preventDefault&&t.preventDefault();t.stopPropagation&&t.stopPropagation();f=t.dataTransfer.getData("drag/text");f=angular.fromJson(f);e=n(u.uiOnDrop);i.$apply(function(){e(i,{$data:f,$event:t})});r.removeClass(o)}var f="defaultchannel",e="",o=u.dragEnterClass||"on-drag-enter";t.$on("ANGULAR_DRAG_START",function(n,t){e=t;f===t&&(r.bind("dragenter",s),r.bind("dragleave",h),r.bind("dragover",c),r.bind("drop",l))});t.$on("ANGULAR_DRAG_END",function(n,t){e="";f===t&&(r.unbind("dragenter",s),r.unbind("dragleave",h),r.unbind("dragover",c),r.unbind("drop",l))});u.$observe("dropChannel",function(n){n&&(f=n)})}}]);