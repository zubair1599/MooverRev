@model Business.Utility.PagedResult

@{
    var min = (Model.CurrentPage * Model.PageSize) + 1;
    var max = Math.Min(( (Model.CurrentPage + 1) * Model.PageSize), Model.TotalCount);
}

<span>
    Showing @min - @max of @Model.TotalCount
</span>

@if (Model.PageCount > 1)
{
    var shownDotsBefore = false;
    var shownDotsAfter = false;
    var current = Model.CurrentPage + 1;
    <ul class="page-list">

        @if (current > 1)
        {
            <li class="back">
                @Html.ActionLinkPreserveQuery("<<", null, new { page = Model.CurrentPage - 1 })
            </li>
        }

        @foreach (var page in Enumerable.Range(1, Model.PageCount))
        {
            var showPage = page <= 2 || page >= Model.PageCount - 2 || 
                                ( ( page >= current - 1) && (page <= current + 1) ) || 
                                (current <= 5 && page <= 4) || 
                                ((current >= Model.PageCount - 5) && (page >= Model.PageCount - 5));
            
            if (page == current)
            {
                <li class="current">@page</li>
            }
            else if (!showPage && !shownDotsBefore && (page < current))
            {
                shownDotsBefore = true;
                <li class="dots">
                    ...
                </li>
            }
            else if (!showPage && !shownDotsAfter && (page > current))
            {
                shownDotsAfter = true;
                <li class="dots">
                    ...
                </li>
            }
            else if (showPage)
            {
                <li>
                    @Html.ActionLinkPreserveQuery(page.ToString(), null, new { page = page - 1 })
                </li>
            }
        }

        @if (current < Model.PageCount)
        {
            <li class="back">
                @Html.ActionLinkPreserveQuery(">>", null, new { page = Model.CurrentPage + 1 })
            </li>
        }
    </ul>
}