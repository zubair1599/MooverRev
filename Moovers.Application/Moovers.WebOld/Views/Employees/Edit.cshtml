@using Business.Enums
@model EditEmployeeModel

@{
    ViewBag.Title = "Employees";
}
<style>
    span.required {
        position: relative;
        overflow: visible;
    }

    span.required:after {
        content: "*" !important;
        color: red;
        display: block;
        font-size: 18px;
        position: absolute;
        right: 29px;
        z-index: 99999;
        top: 10px;
    }

    .form-inline-condensed input, .form-inline-condensed select { margin-right: 10px; }

    .form-inline-condensed span.required:after {
        right: 0;
        top: 8px;
    }
</style>

<div class="center-container">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.IsEdit)
        @Html.AntiForgeryToken()

    <div class="section-container">

        <div class="nav-secondary">
            <ul class="left">
                <li class="nav-item selected">
                    <a href="#">Profile</a>
                </li>
                <li class="nav-item">
                    <a href="#">Performance</a>
                </li>
                <li class="nav-item">
                    <a href="#">Schedule</a>
                </li>
            </ul>
        </div>

        <div class="section section-white">
            <div class="section-wrap" style="padding: 10px; padding-left: 210px;">
                @if (Model.Employee != null && !String.IsNullOrEmpty(Model.Employee.Lookup))
                {
                    <h4 class="nomargin">
                        @Model.Employee.DisplayName() - @Model.Employee.Lookup
                    </h4>
                }
            </div>
        </div>
        <div class="section section-light">
            <div class="section-wrap cfix">
                <div class="section-title">
                    <h5>Personal Information</h5>
                </div>
                <div class="section-content">
                    <div class="label-inline">
                        <label>Name</label>
                        
                        <label style="position:relative;left:140px">Birth Date</label>

                    </div>
                    <div class="form-inline">
                        <span class="required inline">@Html.TextBoxFor(m => m.firstname, new { required = "required", placeholder = "First Name" , style="width:150px" })</span>
                        <span class="required inline">@Html.TextBoxFor(m => m.lastname, new { required = "required", placeholder = "Last Name", style = "width:150px" })</span>
                        @Html.DateBoxFor(m => m.birthdate, new { placeholder = "Date of Birth", required = "required" })
                        @Html.DropDownListFor(m => m.gender, Gender.Male.ToSelectList(), new { style = "width:100px" })
                    </div>


                    <div class="label-inline">
                        <label>Social Security Number</label>
                        <label style="position:relative;left:-60px">Driver License Number</label>
                        <label style="position:relative;left:-110px">Expiration</label>
                    </div>
                    <div class="form-inline">
                        <span class="required inline">
                            @Html.TextBoxFor(m => m.ssn, new { placeholder = "Social Security Number", required = "required", style = "width:150px" })
                        </span>
                        @Html.TextBoxFor(m => m.driverlicense, new { placeholder = "Driver License Number" , style="width:150px"  })
                        @Html.DropDownListFor(m => m.driverLicenseExpirationMonth, Enumerable.Range(1, 12).Select(i => new SelectListItem() { Text = i.ToString(), Value = i.ToString() }), new { @class = "input-mini", style = "width:100px" })
                        @Html.DropDownListFor(m => m.driverLicenseExpirationYear, Enumerable.Range(DateTime.Now.Year, 30).Select(i => new SelectListItem() { Text = i.ToString(), Value = i.ToString() }), new { @class = "input-mini", style = "width:100px" })
                    </div>




                    @*@if (ViewBag.HasMultipleFranchises)
                        {*@
                    @*<div class="label-inline">
                            <label>Franchise</label>
                            <label style="margin-left: 13px;">Location</label>
                        </div>
                        <div class="form-inline">
                            @Html.DropDownList("franchiseid", Model.GetFranchises().Select(i => new SelectListItem() { Text = i.Name, Value = i.FranchiseID.ToString(), Selected = i.FranchiseID == Model.FranchiseId }))
                            @Html.DropDownList("locationid", Model.GetLocations().Select(i => new SelectListItem() { Text = i.Name, Value = i.LocationId.ToString(), Selected = i.LocationId == Model.LocationId }))

                        </div>*@
                    @*}*@




                    <div class="label-inline">
                        <label>Driver's License</label>
                    </div>
                    <div class="form-inline">
                        <input type="file" name="driverlicenseimg" />
                    </div>

                    <div class="label-inline">
                        <label>DOT Medical Card</label>
                    </div>
                    <div class="form-inline">
                        <input type="file" name="dotcardimg" />
                    </div>

                </div>
            </div>
        </div>
        <div class="section section-dark">
            <div class="section-wrap cfix">
                <div class="section-title">
                    <h5>Contact Information</h5>
                </div>
                <div class="section-content">
                    <div class="label-inline">
                        <label>Primary Phone</label>
                    </div>
                    <div class="form-inline">
                        @Html.TextBoxFor(m => m.primaryPhone, new { placeholder = "Primary Phone", @type = "tel" })
                        @Html.CheckBoxFor(m => m.acceptTextPrimary)
                        <label class="checkbox-text" for="acceptTextPrimary">Accept Text Messages</label>
                    </div>

                    <div class="label-inline">
                        <label>Secondary Phone</label>
                    </div>
                    <div class="form-inline">
                        @Html.TextBoxFor(m => m.secondaryPhone, new { placeholder = "Secondary Phone", @type = "tel" })
                        @Html.CheckBoxFor(m => m.acceptTextSecondary)
                        <label class="checkbox-text" for="acceptTextSecondary">Accept Text Messages</label>
                    </div>

                    <div class="label-inline">
                        <label>Email</label>
                    </div>
                    <div class="form-inline">
                        @Html.TextBoxFor(m => m.email, new { @class = "span2", @type = "email", placeholder = "Email" })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "red" })
                    </div>
                </div>
            </div>
        </div>
        <div class="section section-light">
            <div class="section-wrap cfix">
                <div class="section-title">
                    <h5>Address</h5>
                </div>
                <div class="section-content">
                    <div class="label-inline">
                        <label>Street Address</label>
                    </div>
                    <div class="form-inline">
                        <span class="required inline">
                            @Html.TextBoxFor(m => m.street1, new { @class = "span6", placeholder = "Street", required = "required" })
                        </span>
                    </div>
                    <div class="label-inline">
                        <label>Apt. / Suite / Unit</label>
                    </div>
                    <div class="form-inline">
                        @Html.TextBoxFor(m => m.street2, new { @class = "span2", placeholder = "Apartment, Suite, Unit, etc." })
                    </div>
                    <div class="label-inline">
                        <label>City / State / Zip</label>
                    </div>
                    <div class="form-inline-condensed">
                        <span class="required inline">
                            @Html.TextBoxFor(m => m.city, new { @class = "city", placeholder = "City", required = "required" })
                        </span>
                        <span class="required inline">
                            @Html.DropDownListFor(m => m.state, General.SelectStateList, new { required = "required" })
                        </span>
                        <span class="required inline">
                            @Html.TextBoxFor(m => m.zip, new { @class = "zip input-small", placeholder = "Zip", required = "required", })
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="section section-dark">
            <div class="section-wrap cfix">
                <div class="section-title">
                    <h5>User Profile</h5>
                </div>
                <div class="section-content">

                    <div style="float:left">
                        <div class="label-inline">
                            <label>Title</label>
                            <label style="position:relative;left:13px">Role</label>
                        </div>
                        <div class="form-inline">
                            
                            @Html.TextBoxFor(m => m.Title, new { placeholder = "Title For Account" , style="width:220px" })
                            <select name="roles">
                                @foreach (var role in Model.Roles)
                                {
                                    if (Model.User != null)
                                    {
                                        <option value="@role" @(Model.IsEdit && System.Web.Security.Roles.IsUserInRole(Model.User.UserName, role) ? "selected" : "")>@role</option>
                                    }
                                    else
                                    {
                                        <option value="@role" @(Model.IsEdit ? "selected" : "")>@role</option>
                                    }

                                }
                            </select>
                        </div>
                        <div class="label-inline">
                            <label>Location</label>
                            <label style="position:relative;left:13px">Type</label>
                        </div>
                        <div class="form-inline">
                            


                            @Html.DropDownList("locationid", Model.GetLocations().Select(i => new SelectListItem() { Text = i.Name, Value = i.LocationId.ToString(), Selected = i.LocationId == Model.LocationId }))


                           @Html.DropDownList("workingtype",WorkingType.Needed.ToSelectList())

                        </div>



                        <div class="label-inline">
                            <label>Class</label>
                            <label style="position:relative;left:13px">Franchise</label>

                        </div>

                        <div class="form-inline">
                            @Html.DropDownList("classtype", ClassType.PartTime.ToSelectList())
                            @Html.DropDownList("franchiseid", Model.GetFranchises().Select(i => new SelectListItem() { Text = i.Name, Value = i.FranchiseID.ToString(), Selected = i.FranchiseID == Model.FranchiseId }))


                        </div>
                    </div>


                </div>
            </div>
        </div>



        <div class="section section-light">
            <div class="section-wrap cfix">
                <div class="section-title">
                    <h5>User Credentials</h5>
                </div>
                <div class="section-content">

                    <div class="label-inline">
                        <label>Username</label>
                        <label style="position:relative;left:-5px">Employee ID</label>
                    </div>
                    <div class="form-inline">
                        @if (Model.IsEdit)
                        {
                            @Html.TextBoxFor(model => model.Username, null, new { @class = "span1", placeholder = "Username", @readonly = "true" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.Username, null, new { @class = "span1", placeholder = "Username"  })
                        }
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "red" })




                        @Html.TextBoxFor(m => m.EmployeeNumber, new { placeholder="800 000 000"});
                    </div>


                    <div class="label-inline">
                        <label>Password</label>
                        <label style="position:relative;left:-5px">Confirm Password</label>
                    </div>
                    <div class="form-inline">

                        @Html.PasswordFor(model => model.Password, new { @class = "span1", placeholder = "Password" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "red" })
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "span1", placeholder = "Confirm Password" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "red" })


                    </div>



                    <div class="label-inline">

                        <label>Locked</label>
                    </div>

                    <div class="form-inline">

                        @Html.CheckBoxFor(m => m.IsLocked)
                    </div>


                </div>
            </div>
        </div>

        <div class="section section-dark">
            <div class="section-wrap cfix">
                <div class="section-title">
                    <h5>Payroll</h5>
                </div>
                <div class="section-content">
                    <div class="label-inline">
                        <label>Position</label>
                    </div>
                    <div class="form-inline">
                        <span class="required inline">
                            @Html.DropDownListFor(m => m.position, Position.Driver.ToSelectList(), new { required = "required" })
                        </span>
                    </div>
                    <div class="label-inline">
                        <label>Pay Type</label>
                        <label >Pay Rate</label>
                    </div>
                    <div class=" form-inline">
                        <span style="position: relative;">
                            @Html.DropDownListFor(m => m.payType, PayType.Hourly.ToSelectList(), new { @class = "with-additional", required = "required" })
                            <span class="red" style="position: absolute; right: 16px; font-size: 20px; top: 4px;">*</span>
                        </span>
                        <span style="position: relative;">
                            @Html.TextBoxFor(m => m.payRate, new { placeholder = "Pay Rate", required = "required" })
                            <span class="red" style="position: absolute; right: 16px; font-size: 20px; top: 4px;">*</span>
                        </span>
                        <div class="form-field-comment field2">Hourly Rate or Annual Salary</div>
                    </div>
                    <div class="label-inline">
                        <label>Filing Status</label>
                        <label>W-4 Allowances</label>
                    </div>
                    <div class="form-inline">
                        <span style="position: relative;">
                            @Html.DropDownListFor(m => m.filingStatus, FilingStatus.Single.ToSelectList(), new { @class = "with-additional" })
                            <span class="red" style="position: absolute; right: 16px; font-size: 20px; top: 4px;">*</span>
                        </span>
                        <span style="position: relative;">
                            @Html.TextBoxFor(m => m.allowance, new { placeholder = "W-4 Allowance", required = "required" })
                            <span class="red" style="position: absolute; right: 28px; font-size: 20px; top: 4px;">*</span>
                        </span>

                        <div class="form-field-comment field2">Total allowances on IRS Form W-4</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="section section-light clearfix">
            <div class="section-wrap">
                <div class="section-title">
                    <h5>Employment Status</h5>
                </div>
                <div class="section-content">
                    <div class="label-inline">
                        <label>Hire Date</label>
                        <label></label>
                    </div>
                    <div class="form-inline">

                        @Html.DateBoxFor(m => m.hireDate)
                        <label>
                            @Html.RadioButtonFor(m => m.isArchived, "false", new { style = "margin-left: 105px" })
                            Active
                        </label>

                        <label>
                            @Html.RadioButtonFor(m => m.isArchived, "true",new { style = "margin-left: 105px" })
                            Terminated
                        </label>

                    </div>


                    @if (Model.terminationDate.HasValue && Model.terminationType.HasValue)
                    {
                        <div class="label-inline">
                            <label>Termination Date</label>
                            <label>Termination Type</label>
                        </div>
                        <div>
                            <div class="form-inline">
                                @Html.DateBoxFor(m => m.terminationDate)
                                <br />
                                @Html.DropDownListFor(m => m.terminationType, TerminationReasons.Other.ToSelectList(), new { style = "margin-left: 105px" })
                            </div>
                        </div>

                        <div class="label-inline">
                            <label>Reason</label>
                        </div>
                        <div class="form-inline">
                            @Html.TextAreaFor(m => m.terminationReason)
                        </div>
                    }

                    <br />
                    <input type="submit" class="btn btn-primary" />
                    <br />
                </div>
            </div>
        </div>
    </div>
    }
</div>

<script type="text/javascript">
    $(function() {
        $("[name=ssn]").mask("999-99-9999");
    });
</script>
